import { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { client } from "../../libs/client";
import "highlight.js/styles/vs2015.css";
import Header from "../../components/Header/Header";
import Footer from "../../components/Footer/Footer";
import ArticleCard from "../../components/ArticleCard/ArticleCard";
import { Category, Blog } from "../../interfaces/index";

type Props = { blogs: Blog[]; category: Category };

const CategoryId: NextPage<Props> = ({ blogs, category }: Props) => {
  return (
    <div className="box-border overflow-clip">
      <Head>
        <title>#{category.name}の記事</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-blue-50 mx-auto min-h-screen flex-1 h-full">
        <Header />
        <div className="mt-6 sm:mt-20 p-6 max-w-6xl container mx-auto">
          <h1 className="font-bold text-3xl sm:text-center mb-10">
            タグ: {category.name} の記事一覧
          </h1>
          <ul className="sm:flex sm:flex-wrap w-full sm:justify-between sm:items-start">
            {blogs.map((blog: Blog, index) => (
              <ArticleCard key={index} {...blog} />
            ))}
          </ul>
        </div>
      </main>
      <Footer />
    </div>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  const data = await client.get({ endpoint: "category" });
  const paths = data.contents.map(
    (content: Category) => `/category/${content.id}`
  );

  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const id = context.params?.id as string;
  const blog = await client.get({
    endpoint: "blog",
    queries: {
      filters: `categories[contains]${id}`,
    },
  });
  const category = await client.get({
    endpoint: `category/${id}`,
  });

  return {
    props: {
      blogs: blog.contents as Blog[],
      category: category as Category,
    },
  };
};

export default CategoryId;
